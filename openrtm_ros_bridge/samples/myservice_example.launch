<launch>
  <arg name="HAVE_DISPLAY" default="true" />

  <arg     if="$(arg HAVE_DISPLAY)"  name="launch_prefix" value="xterm -fn 10x20 -geometry 60x20 -e" />
  <arg unless="$(arg HAVE_DISPLAY)"  name="launch_prefix" value=""/>
  <!-- BEGIN:openrtm setting -->
  <arg name="corba_port" default="2809" />
  <arg name="nameserver" default="localhost" />
  <env name="RTCTREE_NAMESERVERS" value="$(arg nameserver):$(arg corba_port)" />
  <arg name="openrtm_args" value='-o "corba.nameservers:$(arg nameserver):$(arg corba_port)" -o "naming.formats:%n.rtc" -o "logger.file_name:/tmp/rtc%p.log" ' />
  <!-- END:openrtm setting -->

  <node name="rtsysedit" pkg="openhrp3" type="rtsysedit.sh" if="$(arg HAVE_DISPLAY)"/>

  <!-- RTC Service Provider sample -->
  <node name="provider" pkg="openrtm_tools" type="MyServiceProviderComp"
	args='$(arg openrtm_args)' launch-prefix="$(arg launch_prefix)"/>

  <!-- RTC Service COnsumet sample -->
  <node name="consumer" pkg="openrtm_tools" type="MyServiceConsumerComp"
	args='$(arg openrtm_args)' launch-prefix="$(arg launch_prefix)" />


  <!-- BEGIN:openrtm connection -->
  <node name="rtmlaunch_example" pkg="openrtm_tools" type="rtmlaunch.py"
        args="$(find openrtm_ros_bridge)/samples/myservice_example.launch"/>
  <rtactivate component="MyServiceProvider0.rtc" />
  <rtactivate component="MyServiceConsumer0.rtc" />
  <rtconnect from="MyServiceProvider0.rtc:MyService"
	     to="MyServiceConsumer0.rtc:MyService"/>
  <!-- END:openrtm connection -->

  <sphinxdoc><![CDATA[
sample programs for OpenRTM service port connection

.. image:: samples/image/service-example.png
  :width: 800

  ]]></sphinxdoc>

</launch>
